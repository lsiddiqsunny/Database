1.
CREATE OR REPLACE TRIGGER SetjobHistory
AFTER UPDATE
ON EMPLOYEE
FOR EACH ROW
DECLARE
BEGIN
IF :OLD.JOB_ID<>:NEW.JOB_ID THEN
INSERT INTO JOB_HISTORY VALUES (:NEW.EMPLOYEE_ID,:NEW.JOIN_DATE,SYSDATE,:NEW.JOB_ID,:NEW.BRANCH_ID);
END IF;
END ;

2.

CREATE OR REPLACE TRIGGER SetbookHistory
AFTER UPDATE
ON BOOK
FOR EACH ROW
DECLARE
BEGIN
IF :OLD.Price<>:NEW.Price THEN
INSERT INTO book_HISTORY VALUES ((select count(*) from book_history)+1,:NEW.book_id,:OLD.PRICE,:OLD.PUBLISHER_PRICE,SYSDATE);
END IF;
END ;

3.


CREATE OR REPLACE TRIGGER update_after_delete
AFTER DELETE
   ON CUSTOMER_order
   FOR EACH ROW

DECLARE


BEGIN
UPDATE BOOK
SET TOTAL_IN_STORAGE=TOTAL_IN_STORAGE+:old.AMOUNT
WHERE BOOK_ID=:OLD.BOOK_ID;
UPDATE BOOK
SET TOTAL_SOLD=TOTAL_SOLD- :old.AMOUNT
WHERE BOOK_ID=:OLD.BOOK_ID;
END;


4.
CREATE OR REPLACE TRIGGER update_after_INSERT
AFTER INSERT
   ON CUSTOMER_order
   FOR EACH ROW

DECLARE


BEGIN
UPDATE BOOK
SET TOTAL_IN_STORAGE=TOTAL_IN_STORAGE-:NEW.AMOUNT
WHERE BOOK_ID=:NEW.BOOK_ID;
UPDATE BOOK
SET TOTAL_SOLD=TOTAL_SOLD+ :NEW.AMOUNT
WHERE BOOK_ID= :NEW.BOOK_ID;
END;
